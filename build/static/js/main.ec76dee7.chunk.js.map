{"version":3,"sources":["assets/images/me.png","Header.js","Portfolio.js","Nav.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","href","target","rel","icon","faDribbble","size","faLinkedin","faGithub","Component","Portfolio","props","state","shots","fetch","then","response","console","log","json","setState","id","this","map","shot","class","html_url","title","src","images","hidpi","alt","Nav","data-fixed-element","Me","width","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"4GAAAA,EAAOC,QAAU,IAA0B,gC,8OCqC5BC,G,kKA7Bb,WACE,OAEE,yBAAKC,UAAU,oCACb,yBAAKA,UAAU,6CACb,yBAAKA,UAAU,kEACb,wBAAIA,UAAU,QAAd,MAAwB,+CAAxB,eACA,yFACA,yBAAKA,UAAU,gBACb,uBAAGC,KAAK,uCAAuCC,OAAO,SAASC,IAAI,sBACjEH,UAAU,mBACV,kBAAC,IAAD,CAAiBI,KAAMC,IAAYC,KAAK,QAE1C,uBAAGL,KAAK,4CAA4CC,OAAO,SAASC,IAAI,sBACtEH,UAAU,mBACV,kBAAC,IAAD,CAAiBI,KAAMG,IAAYD,KAAK,QAE1C,uBAAGL,KAAK,kCAAkCC,OAAO,SAASC,IAAI,sBAC5DH,UAAU,mBACV,kBAAC,IAAD,CAAiBI,KAAMI,IAAUF,KAAK,gB,GApBjCG,cC0BNC,G,wDA9BX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,MAAO,IAHI,E,qDAOnB,WAAqB,IAAD,OAChBC,MAAM,cACDC,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZA,EAASG,UAEhBJ,MAAK,SAAAH,GAAK,OAAI,EAAKQ,SAASR,Q,oBAEjC,WACI,OACI,yBAAKS,GAAG,SAEAC,KAAKV,MAAMC,MAAMU,KAAI,SAAAC,GACjB,OACI,uBAAGC,MAAM,OAAOvB,OAAO,SAASC,IAAI,sBAAsBF,KAAMuB,EAAKE,SAAUC,MAAOH,EAAKG,OAAO,yBAAKF,MAAM,SAASD,EAAKG,OAAY,yBAAKC,IAAKJ,EAAKK,OAAOC,MAAOC,IAAMP,EAAKG,iB,GAtBnLlB,c,iBCwBTuB,G,kKArBX,WACI,OACI,4BAAQhC,UAAU,oEAAoEiC,qBAAmB,IACrG,yBAAKjC,UAAU,aACX,uBAAGA,UAAU,eAAeC,KAAK,cAC7B,yBAAKD,UAAU,yCAAyC4B,IAAKM,IAAIH,IAAI,SAASI,MAAM,SAExF,wBAAInC,UAAU,cACV,wBAAIA,UAAU,YACV,uBAAGA,UAAU,WAAWC,KAAK,mCAAmCC,OAAO,SAASC,IAAI,uBAApF,cAEJ,wBAAIH,UAAU,YACV,uBAAGA,UAAU,WAAWC,KAAK,+BAA+BC,OAAO,SAASC,IAAI,uBAAhF,mB,GAbVM,cCmBH2B,E,4JAjBb,WACE,OACE,yBAAKpC,UAAU,OACb,yBAAKA,UAAU,YACb,6BAASA,UAAU,gGACjB,yBAAKA,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,c,GATIS,aCME4B,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2D,YCVRC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2HzC,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBjC,MAAK,SAAAkC,GACFA,EAAaC,gBAEhBC,OAAM,SAAAC,GACHnC,QAAQmC,MAAMA,EAAMC,c","file":"static/js/main.ec76dee7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.cb5565dc.png\";","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n  faLinkedin, faDribbble, faGithub\n} from \"@fortawesome/free-brands-svg-icons\";\nimport './assets/stylesheets/header.scss';\n\nclass Header extends Component {\n  render() {\n    return (\n\n      <div className=\"row align-items-center py-3 mt-5\">\n        <div className=\"col-xl-10 d-flex justify-content-end mt-5\">\n          <div className=\"mx-auto mb-5 mb-lg-0 ms-lg-0 me-xl-7 text-center text-lg-start\">\n            <h1 className=\"pb-2\">Hi <span>ðŸ‘‹ </span> I'm Emily!</h1>\n            <p>I'm a full stack developer with a specialization in UX/UI.</p>\n            <div className=\"social-links\">\n              <a href=\"https://www.dribbble.com/EmilyStanek\" target=\"_blank\" rel=\"noopener noreferrer\"\n                className=\"dribbble social\">\n                <FontAwesomeIcon icon={faDribbble} size=\"2x\" />\n              </a>\n              <a href=\"https://www.linkedin.com/in/emilymstanek/\" target=\"_blank\" rel=\"noopener noreferrer\"\n                className=\"dribbble social\">\n                <FontAwesomeIcon icon={faLinkedin} size=\"2x\" />\n              </a>\n              <a href=\"https://github.com/emilystanek/\" target=\"_blank\" rel=\"noopener noreferrer\"\n                className=\"dribbble social\">\n                <FontAwesomeIcon icon={faGithub} size=\"2x\" />\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Header","import React, { Component } from \"react\";\nimport './assets/stylesheets/portfolio.scss';\nclass Portfolio extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            shots: []\n        }\n    }\n\n    componentDidMount() {\n        fetch('/api/shots')\n            .then(response => {\n                console.log(response);\n                response.json()\n            })\n        .then(state => this.setState(state));\n    }\n    render() {\n        return (\n            <div id=\"shots\">\n                {\n                    this.state.shots.map(shot => {\n                        return (\n                            <a class=\"shot\" target=\"_blank\" rel=\"noopener noreferrer\" href={shot.html_url} title={shot.title}><div class=\"title\">{shot.title}</div><img src={shot.images.hidpi} alt={ shot.title }/></a>\n                        )\n                    })\n                }\n            </div>\n        )\n    }\n}\n\nexport default Portfolio","import React, { Component } from \"react\";\nimport Me from './assets/images/me.png';\nimport './assets/stylesheets/nav.scss';\n\nclass Nav extends Component {\n    render() {\n        return (\n            <header className=\"navbar navbar-expand-md navbar-floating navbar-sticky navbar-dark\" data-fixed-element=\"\">\n                <div className=\"container\">\n                    <a className=\"navbar-brand\" href=\"index.html\">\n                        <img className=\"navbar-floating-logo d-none d-lg-block\" src={Me} alt=\"Around\" width=\"100\" />\n                    </a>\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"https://dribbble.com/EmilyStanek\" target=\"_blank\" rel=\"noopener noreferrer\">Portfolio</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"mailto:stanekemily@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\">Contact</a>\n                        </li>\n                    </ul>\n                </div>\n            </header>\n        )\n    }\n}\n\nexport default Nav","import React, { Component } from \"react\"\nimport Header from \"./Header\";\nimport Portfolio from \"./Portfolio\";\nimport Nav from \"./Nav\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"bg-photo\">\n          <section className=\"d-flex position-relative bg-size-cover bg-position-center min-vh-100 overflow-hidden pb-lg-5\">\n            <div className=\"container\">\n              <Nav/>\n              <Header />\n              <Portfolio />\n            </div>\n          </section>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service '\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all '\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n            headers: {\n                'Service-Worker': 'script'\n            },\n        })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './assets/stylesheets/index.scss';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}